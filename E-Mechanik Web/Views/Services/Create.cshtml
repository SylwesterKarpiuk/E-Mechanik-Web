@model E_Mechanik_Web.ViewModels.CreateServiceViewModel
@{
    /**/

    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Service</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableServiceCategoryId, "Kategoria usługi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.AvailableServiceCategoryId, new SelectList(Model.Categories, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Category" })
                @Html.ValidationMessageFor(model => model.AvailableServiceCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Name, "Nazwa usługi", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.Name, new SelectList(Model.Services, "Text", "Text"), htmlAttributes: new { @class = "form-control", @id = "Service" })
                @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExecutionTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExecutionTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExecutionTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.MechanicId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MechanicId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MechanicId, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('#Category').change(function funkcja() {
                var selectedCategory = $("#Category").val();
                var serviceSelect = $('#Service');
            serviceSelect.empty();

            if (selectedCategory != null && selectedCategory != '') {
                $.getJSON('@Url.Action("GetServices", "Services")', { service: selectedCategory }, function (services) {
                     if (services != null && !jQuery.isEmptyObject(services))
                        {
                         serviceSelect.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                         $.each(services, function (index, service) {
                             serviceSelect.append($('<option/>', {
                                    value: service.Text,
                                    text: service.Text
                                }));
                            });
                        };
                    });
                }
            });
    </script>
}
